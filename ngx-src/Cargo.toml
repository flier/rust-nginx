[package]
name = "ngx-src"
version = "0.1.0"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
default = ["stable", "base", "fetch", "build", "debug-log"]

# nginx version

mainline = ["v1_25"]
stable = ["v1_24"]
legacy = ["v1_22"]

v1_25 = ["v1_24"]
v1_24 = ["v1_22"]
v1_22 = ["v1_20"]
v1_20 = []

# core modules

event = []
http = [
    "http_cache",
    "http_charset",
    "http_gzip",
    "http_ssi",
    "http_userid",
    "http_access",
    "http_auth_basic",
    "http_mirror",
    "http_autoindex",
    "http_geo",
    "http_map",
    "http_split_clients",
    "http_referer",
    "http_rewrite",
    "http_proxy",
    "http_fastcgi",
    "http_uwsgi",
    "http_scgi",
    "http_grpc",
    "http_memcached",
    "http_limit_conn",
    "http_limit_req",
    "http_empty_gif",
    "http_browser",
    "http_upstream_hash",
    "http_upstream_ip_hash",
    "http_upstream_least_conn",
    "http_upstream_random",
    "http_upstream_keepalive",
    "http_upstream_zone",
]
mail = ["mail_pop3", "mail_imap", "mail_smtp"]
stream = [
    "stream_limit_conn",
    "stream_access",
    "stream_geo",
    "stream_map",
    "stream_split_clients",
    "stream_return",
    "stream_set",
    "stream_upstream_hash",
    "stream_upstream_least_conn",
    "stream_upstream_random",
    "stream_upstream_zone",
]

# Build-in modules

http_cache = []
http_charset = []
http_gzip = []
http_ssi = []
http_userid = []
http_access = []
http_auth_basic = []
http_mirror = []
http_autoindex = []
http_geo = []
http_map = []
http_split_clients = []
http_referer = []
http_rewrite = []
http_proxy = []
http_fastcgi = []
http_uwsgi = []
http_scgi = []
http_grpc = []
http_memcached = []
http_limit_conn = []
http_limit_req = []
http_empty_gif = []
http_browser = []
http_upstream_hash = []
http_upstream_ip_hash = []
http_upstream_least_conn = []
http_upstream_random = []
http_upstream_keepalive = []
http_upstream_zone = []

mail_pop3 = []
mail_imap = []
mail_smtp = []

stream_limit_conn = []
stream_access = []
stream_geo = []
stream_map = []
stream_split_clients = []
stream_return = []
stream_set = []
stream_upstream_hash = []
stream_upstream_least_conn = []
stream_upstream_random = []
stream_upstream_zone = []

# Optional modules

http_ssl = ["http"]
http_v2 = ["http"]
http_v3 = ["http"]
http_realip = ["http"]
http_addition = ["http"]
http_xslt = ["http"]
http_image_filter = ["http"]
http_geoip = ["http"]
http_sub = ["http"]
http_dav = ["http"]
http_flv = ["http"]
http_mp4 = ["http"]
http_gunzip = ["http"]
http_gzip_static = ["http"]
http_auth_request = ["http"]
http_random_index = ["http"]
http_secure_link = ["http"]
http_degradation = ["http"]
http_slice = ["http"]
http_stub_status = ["http"]

mail_ssl = ["mail"]

stream_ssl = ["stream"]
stream_realip = ["stream"]
stream_geoip = ["stream"]
stream_ssl_preread = ["stream"]

# profile

compat = [
    "http_gzip",
    "http_dav",
    "http_realip",
    "http_upstream_zone",
    "stream_upstream_zone",
]

minimal = ["event", "http", "compat", "threads"]

base = [
    "minimal",

    "http_addition",
    "http_auth_request",
    "http_flv",
    "http_gunzip",
    "http_gzip_static",
    "http_random_index",
    "http_realip",
    "http_secure_link",
    "http_slice",
    "http_ssl",
    "http_stub_status",
    "http_sub",
    "http_v2",

    "stream_realip",
    "stream_ssl_preread",
    "stream_ssl",
]

full = [
    "base",

    "http_dav",
    "http_degradation",
    "http_image_filter",
    "http_mp4",
    "http_v3",
    "http_xslt",

    "mail_ssl",
]

# platform supports

threads = []
file-aio = []
debug-log = []

# optional features for build

fetch = ["reqwest"]
build = ["ngx-build"]
static-lib = ["build"]

[dependencies]

[build-dependencies]
anyhow = "1.0"
cc = "1.0"
cfg-if = "1.0"
cargo-emit = "0.2"
libflate = "2.0"
reqwest = { version = "0.11", features = ["blocking"], optional = true }
tar = "0.4"
tracing = "0.1"
tracing-subscriber = "0.3"
url = "2.4"

ngx-build = { version = "0.1", path = "../ngx-build", optional = true }

[package.metadata.docs.rs]
features = ["docsrs"]
